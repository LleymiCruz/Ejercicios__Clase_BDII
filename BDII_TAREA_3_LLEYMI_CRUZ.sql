-----------------BLOQUES ANÓNIMOS--------------------
------------    A    ---------------------------
SET SERVEROUTPUT ON
DECLARE
    CURSOR CURSOR IS SELECT * FROM EMPLOYEES;
BEGIN
    FOR i IN CURSOR LOOP 
    IF i.FIRST_NAME='Peter' AND i.LAST_NAME='Tucker' THEN
     RAISE_APPLICATION_ERROR(-20003, 'NO SE PUEDE VER EL SUELDO DEL JEFE');
    END IF;
    DBMS_OUTPUT.PUT_LINE(i.FIRST_NAME || ' ' || i.LAST_NAME || ' '|| i.SALARY); 
    END LOOP;
END;
/

------------    B    ---------------------------
DECLARE
    CURSOR CURSOR(ID NUMBER) IS SELECT COUNT(*) TOTAL_EMPLEADOS FROM EMPLOYEES WHERE DEPARTMENT_ID=ID;
BEGIN
     FOR i IN CURSOR(100) LOOP 
    DBMS_OUTPUT.PUT_LINE('Total de empleados de este departamento: ' || i.TOTAL_EMPLEADOS);
    END LOOP;
END;
/

------------    c    ---------------------------
DECLARE
    CURSOR CUR IS SELECT * FROM EMPLOYEES FOR UPDATE;
    EMPL EMPLOYEES%ROWTYPE;
BEGIN
     OPEN CUR;
    LOOP
        FETCH CUR INTO EMPL;
        EXIT WHEN CUR%NOTFOUND;
    IF EMPL.SALARY>8000 THEN
    UPDATE EMPLOYEES SET SALARY=SALARY*1.2 WHERE CURRENT OF CUR;
    ELSIF 
    EMPL.SALARY<8000 THEN
    UPDATE EMPLOYEES SET SALARY=SALARY*1.3 WHERE CURRENT OF CUR;
    END IF;
    END LOOP;
    CLOSE CUR;
END;
/

----------------- FUNCIONES --------------------
-- A ------------------------------------------------------------
CREATE OR REPLACE FUNCTION CREAR_REGION(REGION IN REGIONS.REGION_NAME%TYPE) RETURN REGIONS.REGION_ID%TYPE
IS
ID REGIONS.REGION_ID%TYPE;
  CURSOR REG IS SELECT * FROM REGIONS;
BEGIN
 FOR i IN REG LOOP 
    ID:=i.REGION_ID;
    IF i.REGION_NAME=REGION THEN
      RAISE_APPLICATION_ERROR(-20730, 'La región ' || REGION || ' ya existe en la tabla.');
    END IF;
    END LOOP;
    ID:=ID+1;
    INSERT INTO REGIONS VALUES (ID, REGION);
    RETURN ID;

END;
/
DECLARE
IDEN REGIONS.REGION_ID%TYPE;
REGION REGIONS.REGION_NAME%TYPE;
BEGIN
REGION:='America Central';
IDEN:=CREAR_REGION(UPPER(REGION));
  DBMS_OUTPUT.PUT_LINE('La región ' || REGION ||' se ha agregado con el ID ' || IDEN); 
END;
/

----------------- PROCEDIMIENTOS --------------------
-- A---------------------------------------------------
CREATE OR REPLACE PROCEDURE CALCULADORA
(OPERACION IN VARCHAR2, NUM1 IN NUMBER, NUM2 IN NUMBER, RESULTADO OUT NUMBER)
IS 
BEGIN 
        CASE  
        WHEN OPERACION='SUMA' THEN RESULTADO:=NUM1+NUM2;
         DBMS_OUTPUT.PUT_LINE('El resultado es ' || RESULTADO);
        WHEN OPERACION='RESTA' THEN RESULTADO:=NUM1-NUM2;
         DBMS_OUTPUT.PUT_LINE('El resultado es ' || RESULTADO);
        WHEN OPERACION='MULTIPLICACION' THEN RESULTADO:=NUM1*NUM2;
         DBMS_OUTPUT.PUT_LINE('El resultado es ' || RESULTADO);
        WHEN OPERACION='DIVISION' THEN RESULTADO:=NUM1/NUM2;
         DBMS_OUTPUT.PUT_LINE('El resultado es ' || RESULTADO);
        ELSE RESULTADO:=NULL;  DBMS_OUTPUT.PUT_LINE('Operación no válida');
        END CASE;
       
EXCEPTION
WHEN ZERO_DIVIDE THEN
     DBMS_OUTPUT.PUT_LINE('No se pude realizar una división entre cero');
WHEN VALUE_ERROR THEN
     DBMS_OUTPUT.PUT_LINE('Error aritmético');
WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error'||SQLCODE||SQLERRM);
END;
/
--BLOQUE ANÓNIMO
DECLARE 
A NUMBER:=100;
B NUMBER:=5;
O VARCHAR2(30):='DIVISION';
R NUMBER:=0;
BEGIN
    CALCULADORA(O,A,B,R);    
END;
/


-- B -------------------------------------------------------------------

CREATE TABLE
EMPLOYEES_COPIA
 (EMPLOYEE_ID NUMBER (6,0) PRIMARY KEY,
FIRST_NAME VARCHAR2(20 BYTE),
LAST_NAME VARCHAR2(25 BYTE),
EMAIL VARCHAR2(25 BYTE),
PHONE_NUMBER VARCHAR2(20 BYTE),
HIRE_DATE DATE,
JOB_ID VARCHAR2(10 BYTE),
SALARY NUMBER(8,2),
COMMISSION_PCT NUMBER(2,2),
MANAGER_ID NUMBER(6,0),
DEPARTMENT_ID NUMBER(4,0)
 );

CREATE OR REPLACE PROCEDURE RELLENAR_TABLA
IS 
BEGIN
    INSERT INTO EMPLOYEES_COPIA VALUES(01,'Lleymi','Cruz','lley@gmail.com','98876758','12-12-2019','AD_ASST',8000,0.1,108,10);
    INSERT INTO EMPLOYEES_COPIA VALUES(02,'Juan','Corrales','juan@gmail.com','38876756','13-08-2020','AD_ASST',2400,0.2,121,50);
    INSERT INTO EMPLOYEES_COPIA VALUES(03,'Maria','Juliana','matia@gmail.com','95876756','09-09-2022','SA_REP',9000,0.25,122,30);
    INSERT INTO EMPLOYEES_COPIA VALUES(04,'Liberio','Yaqui','liberio@gmail.com','91234567','10-12-2017','SA_REP',1000,0.10,120,100);
    INSERT INTO EMPLOYEES_COPIA VALUES(05,'Maylu','Ixen','may@gmail.com','88776655','12-12-2018','AD_VP',8000,0.1,118,50);
    INSERT INTO EMPLOYEES_COPIA VALUES(06,'Luis','Yaqui','luis@gmail.com','33445522','23-05-2016','AD_VP',8000,0,110,70);
    INSERT INTO EMPLOYEES_COPIA VALUES(07,'Kelvin','Montoya','kelvin@gmail.com','87675645','21-12-2020','AD_ASST',17000,0.16,112,100);
    INSERT INTO EMPLOYEES_COPIA VALUES(08,'Marcos','Izaguirre','marcos@gmail.com','98876756','12-12-2019','AD_VP',16000,0.1,118,100);
    INSERT INTO EMPLOYEES_COPIA VALUES(09,'Denis','Hernandez','denis@gmail.com','98878936','24-01-2018','AD_VP',8000,0.2,120,30);
    INSERT INTO EMPLOYEES_COPIA VALUES(10,'Xiomara','Osorto','xiomy@gmail.com','97675434','18-07-2017','ST_CLERCK',20000,0.1,126,10);
    INSERT INTO EMPLOYEES_COPIA VALUES(11,'Elena','Ixen','elena@gmail.com','98876756','19-03-2020','ST_CLERCK',9000,0.3,127,30);
    INSERT INTO EMPLOYEES_COPIA VALUES(12,'Sandra','Montoya','sandra@gmail.com','88654867','09-08-2018','ST_CLERCK',9000,0.1,120,100);
    INSERT INTO EMPLOYEES_COPIA VALUES(13,'Rene','Cruz','trne@gmail.com','98876756','06-12-2015','AD_VP',9000,0.2,116,30);
    INSERT INTO EMPLOYEES_COPIA VALUES(14,'Nohemi','Montoya','nohemi@gmail.com','89765432','07-09-2020','AD_VP',5000,0.10,119,100);
    INSERT INTO EMPLOYEES_COPIA VALUES(15,'Jonathan','Osorto','joh@gmail.com','99807654','23-08-2020','AD_VP',9000,0.15,117,40);
DBMS_OUTPUT.PUT_LINE('Carga finalizada');
EXCEPTION
WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error'||SQLCODE||SQLERRM);
END;
/
--BLOQUE ANÓNIMO
BEGIN
 RELLENAR_TABLA;
END;
/
